services:
  traefik:
    image: "traefik:v2.11"
    container_name: "traefik"
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - traefik_network
    ports:
      - "80:80"
      - "443:443"
      # Expose Traefik dashboard to localhost only for security
      - "127.0.0.1:8080:8080"
    environment:
      # Cloudflare API credentials for DNS challenge
      - "CF_API_EMAIL={{ cloudflare_api_email }}"
      - "CF_API_KEY={{ cloudflare_api_key }}"
      # Add timezone for consistent logs
      - "TZ=Asia/Jakarta"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/opt/docker-stack/infrastructure/traefik/traefik.yml:/etc/traefik/traefik.yml:ro"
      - "/opt/docker-stack/infrastructure/traefik/acme.json:/etc/traefik/acme.json"
      - "/opt/docker-stack/infrastructure/traefik/log:/var/log/traefik"
    command:
      - "--configFile=/etc/traefik/traefik.yml"
      - "--log.filePath=/var/log/traefik/traefik.log"
      - "--accesslog.filePath=/var/log/traefik/access.log"
      - "--accesslog=true"
      - "--api.dashboard=true"
      # Add ping service for healthcheck
      - "--ping=true"
      - "--ping.entrypoint=traefik"
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/ping",
        ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    labels:
      - "traefik.enable=true"
      # Dashboard configuration
      - "traefik.http.routers.traefik-dashboard-internal.rule=Host(`traefik.alfian-gading.site`)"
      - "traefik.http.routers.traefik-dashboard-internal.service=api@internal"
      - "traefik.http.routers.traefik-dashboard-internal.middlewares=traefik-auth@file"
      - "traefik.http.routers.traefik-dashboard-internal.entrypoints=websecure"
      - "traefik.http.routers.traefik-dashboard-internal.tls.certresolver=cloudflare"

      # Global HTTP to HTTPS redirect
      - "traefik.http.routers.http-redirect.entrypoints=web"
      - "traefik.http.routers.http-redirect.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.http-redirect.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.http-redirect.service=noop@internal"

      # Security headers middleware
      - "traefik.http.middlewares.security-headers.headers.browserXssFilter=true"
      - "traefik.http.middlewares.security-headers.headers.contentTypeNosniff=true"
      - "traefik.http.middlewares.security-headers.headers.forceSTSHeader=true"
      - "traefik.http.middlewares.security-headers.headers.stsIncludeSubdomains=true"
      - "traefik.http.middlewares.security-headers.headers.stsPreload=true"
      - "traefik.http.middlewares.security-headers.headers.stsSeconds=31536000"

networks:
  traefik_network:
    name: traefik_network
    driver: bridge
