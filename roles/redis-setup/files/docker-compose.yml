services:
  redis-server:
    container_name: redis-server
    image: redis:8.0.0
    restart: unless-stopped
    networks:
      - redis_network
    volumes:
      - redis_data:/data
    command: redis-server --save 60 1 --loglevel warning --requirepass ${REDIS_PASSWORD:-redispassword}
    healthcheck:
      test:
        ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-redispassword}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    security_opt:
      - no-new-privileges:true

  redis-commander:
    container_name: redis-commander
    image: rediscommander/redis-commander:latest
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local:redis-server:6379:0:${REDIS_PASSWORD:-redispassword}
      HTTP_USER: ${REDIS_COMMANDER_USER:-admin}
      HTTP_PASSWORD: ${REDIS_COMMANDER_PASSWORD:-adminpassword}
    networks:
      - redis_network
    ports:
      - "127.0.0.1:8083:8081"
    depends_on:
      redis-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8081/healthcheck || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    security_opt:
      - no-new-privileges:true

volumes:
  redis_data:
    driver: local

networks:
  redis_network:
    name: redis_network
    driver: bridge
